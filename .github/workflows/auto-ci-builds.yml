name: auto-ci-builds

on:
  - push
  - pull_request

jobs:
  build_go_macOS-latest:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
    - run: sed -En 's/^go (.*)$/GO_VERSION=\1/p' go.mod >> $GITHUB_ENV
    - uses: actions/setup-go@v5
      with:
        go-version: "${{ env.GO_VERSION }}"
        check-latest: true
    - name: check OS and architecture
      run: |
        uname -o -r -m
    - name: check go version
      run: |
        go version
    - name: install go dependencies
      run: |
        go get && go mod tidy
    - name: go build
      run: |
        go build
    - name: run
      run: |
        ./elephant-hunt

  build_nix_macOS-latest:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
    - name: check OS and architecture
      run: |
        uname -o -r -m
    - name: install nix package manager
      run: |
        sh <(curl -L https://nixos.org/nix/install)
    - name: check Nix version
      run: |
        . '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' # activate nix environment
        nix --version
        nix-channel --list
    - name: switch to NixOS stable channel
      run: |
        . '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' # activate nix environment
        nix-channel --remove nixos
        nix-channel --remove nixpkgs
        nix-channel --add https://nixos.org/channels/nixos-24.11 nixos
        nix-channel --add https://nixos.org/channels/nixos-24.11 nixpkgs
    - name: list and update channel
      run: |
        . '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' # activate nix environment
        nix-channel --list
        nix-channel --update
    - name: build nix package
      run: |
        . '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' # activate nix environment
        nix-build --expr 'let pkgs = import <nixpkgs> { }; in pkgs.callPackage ./package.nix { }'
    - name: run
      run: |
        find ./result

  build_go_Debian-unstable:
    runs-on: ubuntu-latest
    container: debian:unstable
    steps:
    - uses: actions/checkout@v1
    - name: check Debian version
      run: |
        cat /etc/debian_version
    - name: install sudo and moreutils (for chronic)
      run: |
        echo "Detected APT sources:"
        grep deb /etc/apt/sources.list /etc/apt/sources.list.d/* | grep -v ":#"
        apt update
        apt install --yes sudo moreutils
    - name: install ca-certificates for HTTPS support
      run: |
        sudo apt install --yes ca-certificates
    - name: install build dependencies
      run: |
        sudo apt install --yes golang
    - name: check go version
      run: |
        go version
    - name: install go dependencies
      run: |
        go get && go mod tidy
    - name: go build
      run: |
        go build
    - name: run
      run: |
        ./elephant-hunt

  check_deps-security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check dependencies for known vulnerabilities (SCA)
        uses: snyk/actions/golang@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Enable Snyk monitor to notify when new vulnerabilities are found
        uses: snyk/actions/golang@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor

  check_code-security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: snyk/actions/setup@master
        id: snyk
      - name: Check Snyk version
        run: echo "${{ steps.snyk.outputs.version }}"
      - name: Run Snyk to check code for vulnerabilities (SAST)
        run: |
          snyk code test --org=2489fe40-ba6c-442e-82b1-210f9da9676d
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
